plugins {
    id 'application'
    id "com.google.protobuf" version "0.9.4"
    id 'java'
    id 'idea'
}
apply plugin: 'java'

// These vars come in handy
// we can differentiate build folders based on these vars without changing the build.gradle file
def grpcVersion = '1.64.0'
def protobufVersion = '3.25.1'
def protocVersion = protobufVersion
def generatedFilesBaseDir = "./build/generated/source/proto"
def buildDir = "./build"

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    implementation libs.guava
    implementation(localGroovy())
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "io.grpc:grpc-inprocess:${grpcVersion}"

    testImplementation(platform('org.junit:junit-bom:5.10.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')

    testRuntimeOnly('org.junit.platform:junit-platform-launcher')

}
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs "${generatedFilesBaseDir}/main/grpc", "src/main/java", "${generatedFilesBaseDir}/main/java"
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

javadoc {
    destinationDir = file("./build/docs/javadoc")
    exclude "${generatedFilesBaseDir}/main/grpc"
}

task runServer(type: JavaExec) {
    main = 'org.example.GRPCServer'
    classpath = sourceSets.main.runtimeClasspath
    group = 'application'
    description = 'Run the gRPC server'
}

task runClient(type: JavaExec) {
    main = 'org.example.GRPCClient'
    classpath = sourceSets.main.runtimeClasspath
    group = 'application'
    description = 'Run the gRPC client'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}